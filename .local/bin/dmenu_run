#!/usr/bin/env sh

run_script() { ~/.local/lib/dmenu/"$1"; }

extract_aliases() {
    sed "s_.* \(.*\)='.*'.*_\1_" $@
}

get_desktop_apps() {
    sed -n -e '/^Exec=/p'                       \
        /usr/share/applications/*.desktop       \
        ~/.local/share/applications/*.desktop   |
        sed 's/Exec=\(\S*\).*/\1/'              |
    while read line; do
        basename $line
    done
}
get_aliases() {
    extract_aliases ~/.alias ~/.alias-tmp
}
get_gui_aliases() {
    extract_aliases ~/.alias-gui ~/.alias-gui-tmp
}

aliases="$(get_aliases)"
gui_aliases="$(get_gui_aliases)"

# ┏━━━━━━━━━━━━━━━┓
# ┃ dmenu entries ┃
# ┗━━━━━━━━━━━━━━━┛
get_commands() {
    echo "Open"             # Open an URL or bookmark
    echo "Search"           # Web search
    echo "Clipboard"        # Clipboard using clipmenu
    echo "Snippets"         # Text snippets
    echo "Mail"             # View mail in browser
    echo "Windows"          # Choose windows
    echo "Color"            # Pick a color
    echo "Config"           # Open documentation selection
    echo "Pacman"           # Package management
    echo "Unicode"          # Pick an icon
    echo "Fix Wifi"         # Fix Wi-Fi drop issue on some networks
    echo "Kill Process"     # Kill process
    echo "$aliases"
    echo "$gui_aliases"
    get_desktop_apps        # Programs extracted from *.desktop files
}

# ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
# ┃ Actions based on user's choice ┃
# ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
choice="$(get_commands | dmenu $@)" 
case "$choice" in
    "")
        echo lolz
        exit ;;
    "Open")
        run_script open ;;
    "Search")
        choice="$(echo -n '' | dmenu -p 'Search:')" && firefox -P haris "$choice"
        ;;
    "Clipboard")
        clipmenu ;;
    "Snippets")
        run_script snips ;;
    "Mail")
        run_script mail ;;
    "Windows")
        ~/.local/lib/i3/i3-container-commander.py ;;
    "Pacman")
        run_script pacman ;;
    "Color")
        run_script color ;;
    "Unicode")
        run_script unicode.py ;;
    "Kill Process")
        run_script pkill ;;
    "Fix Wifi")
        rfkill block wifi && rfkill unblock wifi ;;
    "Config")
        run_script cf.py ;;
    # The rest: aliases and regular commands
    *)
        # If the command is an aliased GUI program, just run it
        for al in $gui_aliases; do
            if [ "$choice" = "$al" ]; then
                fish -C "$choice"    # Only fish works here
                exit
            fi
        done
        # If the command is an aliased CLI program, open it in fish
        for al in $aliases; do
            if [ "$choice" = "$al" ]; then
                guirun alacritty --class Float,Alacritty -e fish -C "$choice"
                exit
            fi
        done
        # Fallback, if the entry matches none of the above, just run the command
        cmd-with-notify $choice
        ;;
esac
