#!/usr/bin/env sh

install=" Install..."
about=" About..."
remove=" Remove..."
manage=" Manage..."
update=" Update..."
keyring=" Keyring..."
edit=" Edit..."

print_options() {
    echo "$install"
    echo "$about"
    echo "$update"
    echo "$remove"
    echo "$manage"
    echo "$keyring"
    echo "$edit"
}

choice="$(print_options | dmenu -l $(print_options | wc -l))"

case "$choice" in
    "$install")
        cache_file=~/.cache/.aur-package-list.txt
        age="$(date -d "now - $(stat -c '%Y' "$cache_file") seconds" +%s)"
        # Create cache file if it does not exist or is older than 5 hours
        if [ ! -f "$cache_file" ] || [ $age -gt 18000 ]; then
            curl -s 'https://aur.archlinux.org/packages.gz' \
                -o - | gunzip -c > "$cache_file"
        fi
        # Pull the list of AUR packages
        list="$(cat "$cache_file")"
        # Prepend official packages to the list
        list="$(pacman -Ssq; echo "$list")"
        choice="$(echo "$list" | dmenu -l 20)"
        [ -z "$choice" ] && exit
        cmd="$(pacman -Ss "^$choice\$" >/dev/null && echo sudo pacman -S || echo paru)"
        alacritty --class Float,Alacritty -e fish -C "cmd-with-notify $cmd $choice" && exit
        ;;
    "$about")
        choice="$(echo "$(pacman -Qq)" | dmenu -p 'About:' -l 20)"
        [ -z "$choice" ] && exit
        alacritty --class Float,Alacritty -e fish -C "cmd-with-notify pacman -Qi $choice" && exit
        ;;
    "$update")
        alacritty --class Float,Alacritty -e fish -C "cmd-with-notify paru -Syu"
        ;;
    "$remove")
        choice="$(pacman -Qq | dmenu -l 20)"
        [ -z "$choice" ] && exit
        alacritty --class Float,Alacritty -e fish -C "cmd-with-notify sudo pacman -R $choice" && exit
        ;;
    "$manage")
        gvim "$(fcmd system-install)"
        ;;
    "$keyring")
        alacritty --class Float,Alacritty -e fish -C "cmd-with-notify sudo pacman -Sy archlinux-keyring && exit"
        ;;
    "$edit")
        gvim "$0"
        ;;
esac
